@model MVC.Models.SignatureCompleteModel
@{
	ViewBag.Title = "CAdES Signature";
}

<h2>CAdES Signature</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "signForm", role = "form" })) {
	@Html.ValidationSummary("", new { @class = "text-danger" })

	@* Hidden fields used to pass data from the action to the "signature form" javascript (see below) and vice-versa *@
	@Html.HiddenFor(m => m.CertThumbBase64, new { id = "certThumb" })
	@Html.HiddenFor(m => m.CertContentBase64, new { id = "certContent" })
	@Html.HiddenFor(m => m.ToSignBytesBase64)
	@Html.HiddenFor(m => m.ToSignHashBase64, new { id = "toSignHash" })
	@Html.HiddenFor(m => m.DigestAlgorithmOid, new { id = "digestAlgorithm" })
	@Html.HiddenFor(m => m.SignatureBase64, new { id = "signature"})

	@Html.ActionLink("Try Again", "Index", null, new { id = "tryAgainButton", @class = "btn btn-default", style = "display: none;" })
}

	@section Scripts {
	<script>
		var formIsValid = @Html.Raw(Json.Encode(ViewData.ModelState.IsValid));
		$(document).ready(function () {
			signatureCompleteForm.init({
				form: $('#signForm'),
				certThumbField: $('#certThumb'),
				toSignHashField: $('#toSignHash'),
				digestAlgorithmOidField: $('#digestAlgorithm'),
				signatureField: $('#signature'),
				tryAgainButton: $('#tryAgainButton'),
				formIsValid: formIsValid
			})
		});
	</script>
}
